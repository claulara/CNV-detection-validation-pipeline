#!/usr/bin/Rscript
library(cn.mops)
library(optparse)
library(cn.mops)
bowtie2_picard_gatk3_Run200513 <- c(
"/ingemm/scratch/TFM/CNV/alignment/bowtie2-picard-gatk3/NGS25603-HiSeq4000-exoma-Run200513-HG-0001_S358_align.realign.recal.bam",
"/ingemm/scratch/TFM/CNV/alignment/bowtie2-picard-gatk3/NGS25600-HiSeq4000-exoma-Run200513-HG-0002_S355_align.realign.recal.bam",
"/ingemm/scratch/TFM/CNV/alignment/bowtie2-picard-gatk3/NGS25601-HiSeq4000-exoma-Run200513-HG-0003_S356_align.realign.recal.bam",
"/ingemm/scratch/TFM/CNV/alignment/bowtie2-picard-gatk3/NGS25602-HiSeq4000-exoma-Run200513-HG-0004_S357_align.realign.recal.bam"
)
###################
#col_names = c("chromosome", "start", "end", "gene")
segments <- read.table("/ingemm/scratch/testNGS_CMAG/fastq_NIST/GCF_000001405.25_GRCh37.p13_genomic.gff.ucsc.exome.sorted.merged_s20.2_nohapl.bed",
sep = "\t",
as.is = TRUE)
gr <- GRanges(segments[,1], IRanges(segments[,2], segments[,3]))
####################
X <- getSegmentReadCountsFromBAM(bowtie2_picard_gatk3_Run200513, GR=gr)
resCNMOPS <- exomecn.mops(X, normType = "poisson", qu = 0.99, minReadCount = 1)
resultExomeData <- calcIntegerCopyNumbers(resCNMOPS)
CNVs <- as.data.frame(cnvs(resultExomeData))
write.csv(CNVs,file="/home/claulara/Documents/TFM/algoritms/tools/cnmpos/cnmops.csv")
View(CNVs)
resultExomeData <- calcIntegerCopyNumbers(resCNMOPS)
cnvs <- as.data.frame(cnvs(resultExomeData))
# Function to write a particular sample in cn.mops result GRanges to bed file.
write_sample_cnvs <- function(sample_name, cnv_results) {
sample_cnvs <- cnv_results[cnv_results$sampleName == sample_name]
bed <- granges_to_bed(sample_cnvs)
file_name <- sub(".bam$", ".bed", sample_name)
path <- paste0(result_dir, file_name)
write_bed(bed, path)
}
# Output CNV bed files for all input samples.
sapply(basename(bam_files), write_sample_cnvs, cnv_results = cnvs)
# Output CNV bed files for all input samples.
sapply(basename(bowtie2_picard_gatk3_Run200513), write_sample_cnvs, cnv_results = cnvs)
View(cnvs)
# Output CNV bed files for all input samples.
sapply(basename(bowtie2_picard_gatk3_Run200513), write_sample_cnvs, cnv_results = cnvs)
View(cnvs)
# Function to write a particular sample in cn.mops result GRanges to bed file.
write_sample_cnvs <- function(cnv_result, bam_test, output_file) {
df_bam_test <- df[df$sampleName %in% bam_test, ]
write.csv(df_bam_test, file = output_file, row.names = FALSE)
}
write_sample_cnvs(cnv_result = cnvs, bam_test = bam_test, output_file = output_file)
bam_test <- c(
"/ingemm/scratch/TFM/CNV/alignment/bowtie2-picard-gatk3/NGS25603-HiSeq4000-exoma-Run200513-HG-0001_S358_align.realign.recal.bam")
bam_control <- c(
"/ingemm/scratch/TFM/CNV/alignment/bowtie2-picard-gatk3/NGS25600-HiSeq4000-exoma-Run200513-HG-0002_S355_align.realign.recal.bam",
"/ingemm/scratch/TFM/CNV/alignment/bowtie2-picard-gatk3/NGS25601-HiSeq4000-exoma-Run200513-HG-0003_S356_align.realign.recal.bam",
"/ingemm/scratch/TFM/CNV/alignment/bowtie2-picard-gatk3/NGS25602-HiSeq4000-exoma-Run200513-HG-0004_S357_align.realign.recal.bam"
)
# Function to write a particular sample in cn.mops result GRanges to bed file.
write_sample_cnvs <- function(cnv_result, bam_test, output_file) {
df_bam_test <- df[df$sampleName %in% bam_test, ]
write.csv(df_bam_test, file = output_file, row.names = FALSE)
}
write_sample_cnvs(cnv_result = cnvs, bam_test = bam_test, output_file = output_file)
# Function to write a particular sample in cn.mops result GRanges to bed file.
write_sample_cnvs <- function(cnv_result, bam_test, output_file) {
df_bam_test <- df[df$sampleName %in% basename(bam_test), ]
write.csv(df_bam_test, file = output_file, row.names = FALSE)
}
write_sample_cnvs(cnv_result = cnvs, bam_test = bam_test, output_file = output_file)
output_file <- "/home/claulara/Documents/TFM/algoritms/tools/cnmpos/filtered_samples.csv"
# Function to write a particular sample in cn.mops result GRanges to bed file.
write_sample_cnvs <- function(cnv_result, bam_test, output_file) {
filtered_cnv <- cnv_result[cnv_result$sampleName %in% basename(bam_test), ]
write.csv(filtered_cnv, file = output_file, row.names = FALSE)
}
write_sample_cnvs(cnv_result = cnvs, bam_test = bam_test, output_file = output_file)
sample_name <- basename(bam_test)
